# auto-generated by grc.converter

id: ettus_rfnoc_streamer_debug
label: 'RFNoC: Debug'

parameters:
-   id: null_src
    label: Enable Null Source
    dtype: int
    options: ['1', '0']
    option_labels: ['True', 'False']
-   id: null_sink
    label: Enable Null Sink
    dtype: int
    options: ['1', '0']
    option_labels: ['True', 'False']
-   id: spp
    label: Packet Size
    dtype: int
    default: '64'
-   id: block_index
    label: Debug Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(block_index) < 0 else 'none') }
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
    hide: ${ ('part' if int(device_index) < 0 else 'none') }
-   id: fpga_module_name
    label: FPGA Module Name
    category: RFNoC Config
    dtype: string
    default: noc_block_debug
    hide: all

inputs:
-   domain: rfnoc
    dtype: complex

outputs:
-   domain: rfnoc
    dtype: complex
-   label: stats
    domain: rfnoc
    dtype: int

templates:
    imports: import ettus
    make: |-
        ettus.rfnoc_generic(
            self.device3,
            uhd.stream_args( # TX Stream Args
                cpu_format="fc32", # TODO: This must be made an optionn
                otw_format="sc16",
                args="",
            ),
            uhd.stream_args( # RX Stream Args
                cpu_format="fc32", # TODO: This must be made an option
                otw_format="sc16",
                channels=(0,1),
                args="",
            ),
            "Debug",
            ${block_index},
            ${device_index},
        )
        self.${id}.set_arg_int("spp", ${spp})
        self.${id}.set_arg_int("config", 2*${null_src} + ${null_sink})
    callbacks:
    - set_arg_int("spp", ${spp})
    - set_arg_int("config", 2*${null_src} + ${null_sink})

file_format: 1
