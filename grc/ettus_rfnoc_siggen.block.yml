# auto-generated by grc.converter

id: ettus_rfnoc_streamer_siggen
label: 'RFNoC: SigGen'

parameters:
-   id: frequency
    label: Frequency
    dtype: real
    default: '0.1'
-   id: spp
    label: Packet Size
    dtype: int
    default: '364'
-   id: enable
    label: Enable
    dtype: int
    options: ['1', '0']
    option_labels: ['True', 'False']
-   id: gain
    label: Gain
    dtype: real
    default: '1.0'
-   id: amplitude
    label: Amplitude
    dtype: complex
    default: '1.0'
-   id: samp_rate
    label: Sample Rate
    dtype: real
    default: '10000000'
-   id: waveform
    label: Waveform
    dtype: string
    options: ['"CONSTANT"', '"SINE_WAVE"', '"NOISE"']
    option_labels: [Constant, Sine, Noise]
-   id: block_index
    label: SigGen Select
    category: RFNoC Config
    dtype: int
    default: '-1'
-   id: device_index
    label: Device Select
    category: RFNoC Config
    dtype: int
    default: '-1'
-   id: fpga_module_name
    label: FPGA Module Name
    category: RFNoC Config
    dtype: string
    default: noc_block_siggen
    hide: all

outputs:
-   domain: stream
    dtype: complex
    vlen: 1

templates:
    imports: import ettus
    make: |-
        ettus.rfnoc_generic(
            self.device3,
            uhd.stream_args( # TX Stream Args
                cpu_format="fc32", # TODO: This must be made an option
                otw_format="sc16",
                args="",
            ),
            uhd.stream_args( # RX Stream Args
                cpu_format="fc32", # TODO: This must be made an option
                otw_format="sc16",
                args="",
            ),
            "SigGen", ${block_index}, ${device_index},
        )
        self.${id}.set_arg_int("spp",  ${spp})
        self.${id}.set_arg_double("frequency", ((2*${frequency})/${samp_rate}))
        self.${id}.set_arg_str("waveform", ${waveform})
        self.${id}.set_arg_double("gain" , ${gain})
        self.${id}.set_arg_int("enable", ${enable})
        self.${id}.set_arg_double("amplitude_i", ${amplitude}.real)
        self.${id}.set_arg_double("amplitude_q", ${amplitude}.imag)
    callbacks:
    - set_arg_double("frequency", ((2*${frequency})/${samp_rate}))
    - set_arg_double("gain", ${gain})
    - set_arg_int("enable", ${enable})
    - set_arg_double("amplitude_i", ${amplitude}.real)
    - set_arg_double("amplitude_q", ${amplitude}.imag)
    - set_arg_str("waveform", ${waveform})
    - set_arg_int("spp", ${spp})

file_format: 1
